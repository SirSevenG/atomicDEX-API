name: atomicDex-API poist-release tests

on:
  release:
    types: [published]

jobs:

  test_saturation_s1:
    name: Saturation Scenario 1
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tests: [saturation-s1, saturation-s2, saturation-s3, saturation-s4, swaps-s1]

    steps:
      - uses: actions/checkout@v2

      - name: Extract tag name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/tags/})"
        id: extract_tag

      - name: Shortify commit sha
        shell: bash
        run: echo "##[set-output name=sha_short;]$(echo ${GITHUB_SHA::9})"
        id: shortify_commit

      - name: Run ${{ matrix.tests }}
        shell: bash
        run: |
          echo "Release: ${{ steps.extract_branch.outputs.branch }}" >> qa/logs/release_note.txt
          echo "latest_commit: ${{ steps.shortify_commit.outputs.sha_short }}" >> qa/logs/release_note.txt
          cd qa
          cp ${{ matrix.tests }}-compose.yml docker-compose.yml
          docker-compose build
          docker-compose run workspace
          docker-compose down
          tar -cvzf ${{ matrix.tests }}-logs.tar.gz logs

      - name: Upload test log as artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.tests }}
          path: ./qa/${{ matrix.tests }}-logs.tar.gz

#  test_saturation_s2:
#    name: Saturation Scenario 2
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Saturation Test 2
#        run: |
#          cd qa
#          cp saturation-s2-compose.yml docker-compose.yml
#          docker-compose build
#          docker-compose run workspace
#          docker-compose down
#          tar -cvzf saturation-s2-logs.tar.gz logs
#
#      - name: Upload test log as artifact
#        uses: actions/upload-artifact@v1
#        with:
#          name: saturation-s2
#          path: ./qa/saturation-s2-logs.tar.gz
#
#  test_saturation_s3:
#    name: Saturation Scenario 3
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Saturation Test 3
#        run: |
#          cd qa
#          cp saturation-s3-compose.yml docker-compose.yml
#          docker-compose build
#          docker-compose run workspace
#          docker-compose down
#          tar -cvzf saturation-s3-logs.tar.gz logs
#
#      - name: Upload test log as artifact
#        uses: actions/upload-artifact@v1
#        with:
#          name: saturation-s3
#          path: ./qa/saturation-s3-logs.tar.gz
#
#  test_saturation_s4:
#    name: Saturation Scenario 4
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Saturation Test 4
#        run: |
#          cd qa
#          cp saturation-s4-compose.yml docker-compose.yml
#          docker-compose build
#          docker-compose run workspace
#          docker-compose down
#          tar -cvzf saturation-s4-logs.tar.gz logs
#
#      - name: Upload test log as artifact
#        uses: actions/upload-artifact@v1
#        with:
#          name: saturation-s4
#          path: ./qa/saturation-s4-logs.tar.gz
#
#  test_swaps_s1:
#    name: Swaps Scenario 1
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Swaps Test 1
#        run: |
#          cd qa
#          cp swaps-s1-compose.yml docker-compose.yml
#          docker-compose build
#          docker-compose run workspace
#          docker-compose down
#          tar -cvzf swaps-s1-logs.tar.gz logs
#
#      - name: Upload test log as artifact
#        uses: actions/upload-artifact@v1
#        with:
#          name: swaps-s1
#          path: ./qa/swaps-s1-logs.tar.gz
